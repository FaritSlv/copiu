default:
  image: docker:latest #$CI_REGISTRY/devops/devops-docker-tools/docker-alpine:3.19.1
  services:
    - name: docker:dind
  tags:
    - devops-docker
  before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
.docker-build: &docker-build
    stage: build
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
        - |
          if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
            tag=""
            echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
          else
            tag=":$CI_COMMIT_REF_SLUG"
            echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
          fi
    script:
        - |
            echo "<?php
            return [
                'class' => 'yii\db\Connection',
                'dsn' => 'mysql:host=$DB_HOST;dbname=$DB_NAME',
                'username' => '$DB_USERNAME',
                'password' => '$DB_PASSWORD',
                'charset' => 'utf8',
            ];
            " > config/db.php
        - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" $BUILD_ARGS . -f Dockerfile
        - docker push "$CI_REGISTRY_IMAGE${tag}"
    artifacts:
        paths:
          - config/db.php




build_with_migrations_copiu:
  extends: .docker-build
  stage: build
  variables:
        BUILD_ARGS: --build-arg RUN_MIGRATIONS=true
        DB_HOST: $COPIU_DB_HOST
        DB_NAME: $COPIU_DB_NAME
        DB_USERNAME: $COPIU_DB_USERNAME
        DB_PASSWORD: $COPIU_DB_PASSWORD
  only: 
    - prod_copiu
  when: manual


build_with_migrations_demo:
  extends: .docker-build
  stage: build
  variables:
        BUILD_ARGS: --build-arg RUN_MIGRATIONS=true
        DB_HOST: $DEMO_DB_HOST
        DB_NAME: $DEMO_DB_NAME
        DB_USERNAME: $DEMO_DB_USERNAME
        DB_PASSWORD: $DEMO_DB_PASSWORD
  only: 
    - demo
  when: manual



build_with_migrations_sladkaya_ledi:
  extends: .docker-build
  stage: build
  variables:
        BUILD_ARGS: --build-arg RUN_MIGRATIONS=true
        DB_HOST: $SLADKAYA_LEDI_DB_HOST
        DB_NAME: $SLADKAYA_LEDI_DB_NAME
        DB_USERNAME: $SLADKAYA_LEDI_DB_USERNAME
        DB_PASSWORD: $SLADKAYA_LEDI_DB_PASSWORD
  only: 
    - sladkaya_ledi
  when: manual

build_copiu:
  extends: .docker-build
  stage: build
  variables:
        DB_HOST: $COPIU_DB_HOST
        DB_NAME: $COPIU_DB_NAME
        DB_USERNAME: $COPIU_DB_USERNAME
        DB_PASSWORD: $COPIU_DB_PASSWORD
  only: 
    - prod_copiu
  when: manual


build_demo:
  extends: .docker-build
  stage: build
  variables:
        DB_HOST: $DEMO_DB_HOST
        DB_NAME: $DEMO_DB_NAME
        DB_USERNAME: $DEMO_DB_USERNAME
        DB_PASSWORD: $DEMO_DB_PASSWORD
  only: 
    - demo
  when: manual



build_sladkaya_ledi:
  extends: .docker-build
  stage: build
  variables:
        DB_HOST: $SLADKAYA_LEDI_DB_HOST
        DB_NAME: $SLADKAYA_LEDI_DB_NAME
        DB_USERNAME: $SLADKAYA_LEDI_DB_USERNAME
        DB_PASSWORD: $SLADKAYA_LEDI_DB_PASSWORD
  only: 
    - sladkaya_ledi
  when: manual

.deploy: &deploy
    stage: deploy
    script:
        - |
            if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
              tag=""
              echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
            else
              tag=":$CI_COMMIT_REF_SLUG"
              echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
            fi
        - chmod og= $ID_RSA -v
        - apk update && apk add openssh-client 
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $CI_REGISTRY_IMAGE${tag}"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f $CI_ENVIRONMENT_NAME-$CI_PROJECT_NAME || true"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p $EXTERNAL_PORT:80  --restart unless-stopped -v /var/log/eoi/$CI_ENVIRONMENT_NAME:/app/runtime/logs --name $CI_ENVIRONMENT_NAME-$CI_PROJECT_NAME -m 2048m $CI_REGISTRY_IMAGE${tag}"

deploy_copiu:
  extends: .deploy
  stage: deploy
  variables:
    EXTERNAL_PORT: 8002
  environment:
    name: copiu.eoi.lemma-cloud.ru
  only:
    - prod_copiu
  when: manual

deploy_demo:
  extends: .deploy
  stage: deploy
  variables:
    EXTERNAL_PORT: 8004
  environment:
    name: demo.eoi.lemma-cloud.ru
  only:
    - demo
  when: manual

deploy_sladkaya_ledi:
  extends: .deploy
  stage: deploy
  variables:
    EXTERNAL_PORT: 8003
  environment:
    name: zakupka-sladkaya-ledi.eoi.lemma-cloud.ru
  only:
    - sladkaya_ledi
  when: manual